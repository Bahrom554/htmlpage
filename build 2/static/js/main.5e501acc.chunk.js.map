{"version":3,"sources":["constants/actionTypes.js","redux/pages/actions.js","helpers/axios.intercepter.js","helpers/authUtils.js","redux/auth/actions.js","utils/config.js","routes.js","App.js","helpers/fake-backend.js","serviceWorker.js","redux/auth/reducers.js","redux/reducers.js","redux/pages/reducers.js","redux/auth/api.service.js","redux/auth/saga.js","redux/pages/api.service.js","redux/pages/saga.js","redux/sagas.js","redux/store.js","i18n.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","redux_saga_routines__WEBPACK_IMPORTED_MODULE_0__","GET_ALL","createRoutine","GET_ONE","POST_ALL","GET_DATA","axios__WEBPACK_IMPORTED_MODULE_0__","_utils_config__WEBPACK_IMPORTED_MODULE_1__","react_cookie__WEBPACK_IMPORTED_MODULE_2__","lodash__WEBPACK_IMPORTED_MODULE_3__","request","axios","create","baseURL","config","API_URL","interceptors","use","conf","data","Cookies","get","headers","Authorization","concat","Accept","error","Promise","reject","response","isUserAuthenticated","getLoggedInUser","cookies","user","token","Object","_home_azik_Azizbek_Cyber_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","hasAccess","roles","arguments","length","undefined","userRoles","isEmpty","filter","role","includes","name","loginUser","loginUserSuccess","loginUserFailed","registerUserSuccess","registerUserFailed","logoutUser","forgetPasswordSuccess","forgetPasswordFailed","_constants_actionTypes__WEBPACK_IMPORTED_MODULE_0__","username","password","type","payload","history","passwordResetStatus","process","CLIENT_ID","CLIENT_SECRET","GRANT_TYPE","Dashboard","React","lazy","all","e","then","bind","AllApplication","Success_Application","NewApplication","RejectedApplication","Manager_to_User","InProccess","View","AddGoal","AddDevice","AddManufacture","AddSubject","SubjectType","AddStuff","Users","Importance","CreateApplication","EditPage","EditApplication","ChangeAccount","Login","Logout","PrivateRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","pathname","state","from","location","loggedInUser","routes","path","route","Route","exact","window","Popper","require","default","$","jQuery","loading","NonAuthLayout","Loadable","loader","loaded","AuthLayout","users","id","firstName","lastName","realFetch","fetch","url","opts","resolve","setTimeout","endsWith","method","params","JSON","parse","body","filteredUsers","responseJson","ok","json","_params$fullname$spli","fullname","split","newUser","push","message","configureFakeBackend","withLayout","WrappedComponent","HOC","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","connect","App","getLayout","_this2","react_router_dom","Fragment","map","index","Layout","react","fallback","isAuthenticated","Auth","Boolean","hostname","match","INIT_STATE","action","objectSpread","combineReducers","PageReducer","Actions","REQUEST","storeName","defineProperty","isFetched","SUCCESS","_action$payload","result","_action$payload2","FAILURE","_action$payload3","errors","hasErrors","TRIGGER","Api","grant_type","client_id","client_secret","post","Content-Type","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","fetchJSON","options","status","catch","setSession","set","stringify","remove","setTokenToSession","expires","Date","getTime","_ref$payload","res","regenerator_default","wrap","_context","prev","next","call","sent","getMe","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","email","_message","_context3","_marked3","_ref4","_message2","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","getAll","getOne","postAll","getData","getAllTrigger","getDataTrigger","pageSaga","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","rootSaga","getState","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","i18n","initReactI18next","LanguageDetector","init","fallbackLng","supportedLngs","whitelist","debug","detection","order","caches","resources","en","translation","translationsEn","uz","translationsUz","ru","translationsRu","ns","defaultNS","wait","saveMissing","ReactDOM","react_redux_es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e501acc.chunk.js","sourcesContent":["/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';","import {createRoutine} from \"redux-saga-routines\";\n\nconst GET_ALL = createRoutine(\"GET_ALL\");\nconst GET_ONE = createRoutine(\"GET_ONE\");\nconst POST_ALL = createRoutine(\"POST_ALL\");\nconst GET_DATA = createRoutine(\"GET_DATA\");\n\nexport default {\n    GET_ALL,\n    GET_ONE,\n    GET_DATA,\n    POST_ALL\n}\n","import axios from \"axios\"\nimport {config} from \"../utils/config\";\nimport { Cookies } from 'react-cookie';\nimport { get } from 'lodash';\n\n\nconst request = axios.create({\n    baseURL: config.API_URL,\n});\n\nrequest.interceptors.request.use((conf) => {\n    const cookies = new Cookies();\n    const data = cookies.get('token');\n\n    if (get(data, \"access_token\")) {\n        conf.headers = {\n            \"Authorization\": `${get(data, \"token_type\")} ${get(data, \"access_token\")}`,\n            \"Accept\": \"application/json\"\n        }\n    }\n    \n    return conf;\n}, (error) => {\n    return Promise.reject(error);\n});\n\nrequest.interceptors.response.use((response) => {\n    return response;\n}, (error) => {\n    return Promise.reject(error);\n});\n\nexport default request;\n","import { includes, isEmpty } from \"lodash\";\nimport { Cookies } from \"react-cookie\";\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n  const user = getLoggedInUser();\n  if (!user) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n  const cookies = new Cookies();\n  const user = cookies.get(\"user\");\n  const token = cookies.get(\"token\");\n  return user && token ? {...user, ...token} : null;\n};\n\nconst hasAccess = (roles = [], userRoles = []) => {\n  return !isEmpty(userRoles.filter(role => includes(roles, role.name)));\n}\n\nexport { isUserAuthenticated, getLoggedInUser, hasAccess };\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED\n} from '../../constants/actionTypes';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password }\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password }\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history }\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username }\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error\n});\n","export const config = {\n    API_URL: process.env.REACT_APP_BASE_URL,\n    CLIENT_ID: process.env.REACT_APP_CLIENT_ID,\n    CLIENT_SECRET: process.env.REACT_APP_CLIENT_SECRET,\n    GRANT_TYPE: process.env.REACT_APP_GRANT_TYPE,\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport { get } from 'lodash';\n\nimport { isUserAuthenticated, getLoggedInUser, hasAccess } from \"./helpers/authUtils\";\n\n// lazy load all the views\nconst Dashboard = React.lazy(() => import(\"./pages/dashboards/Dashbord\"));\nconst AllApplication = React.lazy(() => import(\"./components/AllApplication\"));\nconst Success_Application = React.lazy(() => import(\"./components/Success_Application\"));\nconst NewApplication = React.lazy(() => import(\"./components/NewApplication\"));\nconst RejectedApplication = React.lazy(() => import(\"./components/RejectedApplication\"));\nconst Manager_to_User = React.lazy(() => import(\"./components/Manager_to_User\"));\nconst InProccess = React.lazy(() => import(\"./components/InProccess\"));\nconst View = React.lazy(() => import(\"./components/view/View\"));\nconst AddGoal = React.lazy(() => import(\"./components/view/AddGoal\"));\nconst AddDevice = React.lazy(() => import(\"./components/view/AddDevice\"));\nconst AddManufacture = React.lazy(() => import(\"./components/view/AddManufacture\"));\nconst AddSubject = React.lazy(() => import(\"./components/view/AddSubject\"));\nconst SubjectType = React.lazy(() => import(\"./components/view/SubjectType\"));\nconst AddStuff = React.lazy(() => import(\"./components/view/AddStuff\"));\nconst Users = React.lazy(() => import(\"./components/Users\"));\nconst Importance = React.lazy(() => import(\"./components/Importance\"));\nconst CreateApplication = React.lazy(() => import(\"./components/CreateApplication\"));\nconst EditPage = React.lazy(() => import(\"./components/EditPage\"));\nconst EditApplication = React.lazy(() => import(\"./components/EditApplication\"));\nconst ChangeAccount = React.lazy(() => import(\"./components/ChangeAccount\"));\n// auth\nconst Login = React.lazy(() => import(\"./pages/auth/Login\"));\nconst Logout = React.lazy(() => import(\"./pages/auth/Logout\"));\n// const ForgetPassword = React.lazy(() =>\n//   import(\"./pages/account/ForgetPassword\")\n// );\n// const Register = React.lazy(() => import(\"./pages/account/Register\"));\n// const ConfirmAccount = React.lazy(() => import(\"./pages/account/Confirm\"));\n\n\n\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n  \n  <Route\n    {...rest}\n    render={(props) => {\n      const isAuthTokenValid = isUserAuthenticated();\n      if (!isAuthTokenValid) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      const loggedInUser = getLoggedInUser();\n      // check if route is restricted by role\n      if (!hasAccess(roles, get(loggedInUser, \"roles\", []))) {\n        // role not authorised so redirect to home page\n        return <Redirect to={{ pathname: \"/all_application\" }} />;\n      }\n\n      // authorised so return component\n      return <Component {...props} />;\n    }}\n  />\n);\n\nconst routes = [\n  // auth and account\n  { path: \"/login\", name: \"Login\", component: Login, route: Route },\n  { path: \"/logout\", name: \"Logout\", component: Logout, route: Route },\n\n  // other pages\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    component: Dashboard,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\"],\n  },\n  {\n    path: \"/all_application\",\n    name: \"AllApplication\",\n    component: AllApplication,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],   \n  },\n  {\n    path: \"/success_application\",\n    name: \"Success_Application\",\n    component: Success_Application,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],   \n  },\n  {\n    path: \"/new_application\",\n    name: \"NewApplication\",\n    component: NewApplication,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/rejected_application\",\n    name: \"RejectedApplication\",\n    component: RejectedApplication,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/manager_to_user\",\n    name: \"Manager_to_User\",\n    component: Manager_to_User,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/in_proccess\",\n    name: \"InProccess\",\n    component: InProccess,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n   {\n    path: \"/view\",\n    name: \"View\",\n    component: View,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    component: Users,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/importance\",\n    name: \"Importance\",\n    component: Importance,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/create_application\",\n    name: \"CreateApplication\",\n    component: CreateApplication,\n    route: PrivateRoute,\n    roles: [\"user\"],  \n  },\n  {\n    path: \"/edit\",\n    name: \"EditPage\",\n    component: EditPage,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/edit_application\",\n    name: \"EditApplication\",\n    component: EditApplication,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/change_account\",\n    name: \"ChangeAccount\",\n    component: ChangeAccount,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/add_goal\",\n    name: \"AddGoal\",\n    component: AddGoal,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\"],  \n  },\n  {\n    path: \"/add_device\",\n    name: \"AddDevice\",\n    component: AddDevice,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/add_manufacture\",\n    name: \"AddManufacture\",\n    component: AddManufacture,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/add_subject\",\n    name: \"AddSubject\",\n    component: AddSubject,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\", \"user\"],  \n  },\n  {\n    path: \"/add_stuff\",\n    name: \"AddStuff\",\n    component: AddStuff,\n    route: PrivateRoute,\n    roles: [\"user\"],  \n  },\n  {\n    path: \"/subject_type\",\n    name: \"SubjectType\",\n    component: SubjectType,\n    route: PrivateRoute,\n    roles: [\"user\", \"admin\", \"manager\"],  \n  },\n\n  {\n    path: \"/\",\n    exact: true,\n    component: () => <Redirect to=\"/dashboard\" />,\n    route: PrivateRoute,\n    roles: [\"admin\",\"manager\",\"user\"],  \n  },\n];\n\nexport { routes, PrivateRoute };\n","import React, { Component, Suspense } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { withNamespaces } from \"react-i18next\";\nimport { connect } from 'react-redux';\nimport Loadable from 'react-loadable';\n\nimport { routes } from './routes';\n\n// setup fake backend\nimport { configureFakeBackend } from './helpers';\nimport { isUserAuthenticated } from './helpers/authUtils';\n\n\n// Themes\nimport './assets/scss/DefaultTheme.scss';\n\n\n\nwindow.Popper = require(\"popper.js\").default;\nwindow.$ = window.jQuery = require(\"jquery\");\n\n\n\n\n\n// Lazy loading and code splitting - \n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>\n\n// All layouts/containers\nconst NonAuthLayout = Loadable({\n  loader: () => import('./components/NonAuthLayout'),\n  render(loaded, props) {\n    let Component = loaded.default;\n    return <Component {...props} />;\n  },\n  loading\n});\n\nconst AuthLayout = Loadable({\n  loader: () => import('./components/AuthLayout'),\n  render(loaded, props) {\n    let Component = loaded.default;\n    return <Component {...props} />;\n  },\n  loading\n});\n\n// configure fake backend\nconfigureFakeBackend();\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent \n */\nconst withLayout = (WrappedComponent) => {\n  const HOC = class extends Component {\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return connect()(HOC);\n}\n\n\n\n/**\n * Main app component\n */\nclass App extends Component {\n  /**\n * Returns the layout component based on different properties\n * @param {*} props \n */\n  getLayout = () => {\n    return isUserAuthenticated() ? AuthLayout : NonAuthLayout;\n  }\n\n  render() {\n    return (\n      // rendering the router with layout\n      <BrowserRouter>\n        <React.Fragment>\n          {routes.map((route, index) => {\n            return (\n              <route.route\n                key={index}\n                path={route.path}\n                exact={route.exact}\n                roles={route.roles}\n                component={withLayout(props => {\n                  const Layout = this.getLayout();\n                  return (\n                    <Suspense fallback={loading()}>\n                      <Layout {...props}>\n                        <route.component {...props} />\n                      </Layout>\n                    </Suspense>\n                  );\n                })}\n              />\n            );\n          })}\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.Auth.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n\n                // authenticate\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        // if login details are valid return user details and fake jwt token\n                        let user = filteredUsers[0];\n                        let responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            firstName: user.firstName,\n                            lastName: user.lastName,\n                            role: \"Admin\",\n                            token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4'\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Username or password is incorrect');\n                    }\n                    return;\n                }\n\n                // register\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // add new users\n                    let { firstName, lastName } = params.fullname.split(\" \");\n                    let newUser = { id: users.length + 1, username: firstName, password: params.password, firstName: firstName, lastName: lastName, role: 'Admin' }\n                    users.push({ newUser })\n\n                    let responseJson = {\n                        id: newUser.id,\n                        username: newUser.username,\n                        firstName: newUser.firstName,\n                        lastName: newUser.lastName,\n                        role: newUser.role,\n                        token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4'\n                    };\n                    resolve({ ok: true, json: () => responseJson });\n                    return;\n                }\n\n                // forget password\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username;\n                    });\n\n                    if (filteredUsers.length) {\n                        let responseJson = {\n                            message: \"We've sent you a link to reset password to your registered email.\"\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Sorry, we could not find any registered user with entered username');\n                    }\n                    return;\n                }\n\n                // get users\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                    if (opts.headers && opts.headers.Authorization === 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJDb2RlcnRoZW1lIiwiaWF0IjoxNTU1NjgyNTc1LCJleHAiOjE1ODcyMTg1NzUsImF1ZCI6ImNvZGVydGhlbWVzLmNvbSIsInN1YiI6InRlc3QiLCJmaXJzdG5hbWUiOiJIeXBlciIsImxhc3RuYW1lIjoiVGVzdCIsIkVtYWlsIjoidGVzdEBoeXBlci5jb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4ifQ.8qHJDbs5nw4FBTr3F8Xc1NJYOMSJmGnRma7pji0YwB4') {\n                        resolve({ ok: true, json: () => users });\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n            }, 500);\n        });\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED\n} from '../../constants/actionTypes';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state:State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default: return { ...state };\n    }\n}\n\nexport default Auth;","import { combineReducers } from 'redux';\nimport Auth from './auth/reducers';\nimport PageReducer from \"./pages/reducers\";\n\nexport default combineReducers({\n    Auth,\n    PageReducer,\n});\n","import Actions from \"./actions\";\nimport {get} from \"lodash\";\n\nexport default function PageReducer(state = {}, action) {\n\n\n    switch (action.type) {\n\n        case Actions.GET_ALL.REQUEST:\n            return ((action, state) => {\n                const { storeName } = action.payload;\n                return {\n                    ...state,\n                    data: {\n                        ...get(state, 'data', {}),\n                        [storeName]: {\n                            ...get(state, `data.${storeName}`, {}),\n                            isFetched: false,\n                        },\n                    },\n                };\n            })(action, state);\n\n\n        case Actions.GET_ALL.SUCCESS:\n            return ((action, state) => {\n                const { result, storeName } = action.payload;\n                return {\n                    ...state,\n                    data: {\n                        ...get(state, 'data', {}),\n                        [storeName]: { result, isFetched: true },\n                    },\n                };\n            })(action, state);\n\n\n\n\n            case Actions.GET_ONE.REQUEST:\n                return ((action, state) => {\n                    const { storeName } = action.payload;\n                    return {\n                        ...state,\n                        data: {\n                            ...get(state, 'data', {}),\n                            [storeName]: {\n                                ...get(state, `data.${storeName}`, {}),\n                                isFetched: false,\n                            },\n                        },\n                    };\n                })(action, state);\n    \n                \n            case Actions.GET_ONE.SUCCESS:\n                return ((action, state) => {\n                    const { result, storeName } = action.payload;\n                    return {\n                        ...state,\n                        data: {\n                            ...get(state, 'data', {}),\n                            [storeName]: { result, isFetched: true },\n                        },\n                    };\n                })(action, state);\n\n\n        case Actions.GET_DATA.FAILURE:\n            return (() => {\n                const { storeName, errors } = action.payload;\n                return {\n                    ...state,\n                    data: {\n                        ...get(state, 'data', {}),\n                        [storeName]: {\n                            isFetched: true,\n                            hasErrors: true,\n                            errors,\n                        },\n                    },\n                };\n            })();\n        case Actions.GET_DATA.TRIGGER:\n            return (() => {\n                const { storeName } = action.payload;\n                return {\n                    ...state,\n                    data: {\n                        ...get(state, 'data', {}),\n                        [storeName]: {\n                            isFetched: false,\n                        },\n                    },\n                };\n            })();\n        default:\n            return state;\n    }\n}\n","import request from \"../../helpers/axios.intercepter\";\nimport {config} from \"../../utils/config\";\n\n\nexport class Api {\n    static login({username, password}) {\n        const data = {\n            username,\n            password,\n            grant_type: config.GRANT_TYPE,\n            client_id: config.CLIENT_ID,\n            client_secret: config.CLIENT_SECRET,\n        }\n        return request.post('/oauth/token', data, {headers: {\"Content-Type\": \"multipart/form-data\"}});\n    }\n\n    static getMe() {\n        return request.get('/api/profile');\n    }\n}\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport {\r\n    LOGIN_USER,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    FORGET_PASSWORD\r\n} from '../../constants/actionTypes';\r\n\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed\r\n} from './actions';\r\nimport {Api} from \"./api.service\";\r\nimport { get } from 'lodash';\r\n\r\n\r\n/**\r\n * Fetch data from given url\r\n * @param {*} url \r\n * @param {*} options \r\n */\r\nconst fetchJSON = (url, options = {}) => {\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.status === 200) {\r\n                throw response.json();\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            return json;\r\n        })\r\n        .catch(error => { throw error });\r\n}\r\n\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user \r\n */\r\nconst setSession = (user) => {\r\n    let cookies = new Cookies();\r\n    if (user){\r\n        cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n    } else {\r\n        cookies.remove(\"user\");\r\n        cookies.remove(\"token\");\r\n    }\r\n};\r\n\r\nconst setTokenToSession = (data) => {\r\n    let cookies = new Cookies();\r\n    if (data) {\r\n        cookies.set(\"token\", JSON.stringify(data), { path: \"/\", expires: new Date(new Date().getTime() + get(data, 'expires_in', 0) * 1000)});\r\n    } else {\r\n        cookies.remove(\"token\");\r\n        cookies.remove(\"user\");\r\n    }\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password \r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    try {\r\n        const response = yield call(Api.login, {username, password});\r\n        setTokenToSession(get(response, 'data', {}));\r\n\r\n        const res = yield call(Api.getMe);\r\n        setSession(get(res, \"data.data\", {}));\r\n\r\n        yield put(loginUserSuccess(get(res, \"data.data\", {})));\r\n    } catch (error) {\r\n        let message;\r\n\r\n        switch (error.status) {\r\n            case 500: message = 'Internal Server Error'; break;\r\n            case 401: message = 'Invalid credentials'; break;\r\n            default: message = error;\r\n        }\r\n\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0 \r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push(\"/login\");\r\n        });\r\n    } catch (error) { }\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500: message = 'Internal Server Error'; break;\r\n            case 401: message = 'Invalid credentials'; break;\r\n            default: message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500: message = 'Internal Server Error'; break;\r\n            case 401: message = 'Invalid credentials'; break;\r\n            default: message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([\r\n        fork(watchLoginUser),\r\n        fork(watchLogoutUser),\r\n        fork(watchRegisterUser),\r\n        fork(watchForgetPassword),\r\n    ]);\r\n}\r\n\r\nexport default authSaga;\r\n","import request from \"../../helpers/axios.intercepter\";\n\nclass Api {\n    static getAll = (url, config) => {\n        return request.get(url, config);\n    }\n    static getOne = (url, config) => {\n        return request.get(url, config);\n    }\n    static postAll = (url, config) => {\n        return request.post(url, config);\n    }\n    static getData = (url, config) => {\n        return request.post(url, config);\n    }\n}\n\nexport default Api;\n","import {all, call, put, takeEvery} from \"redux-saga/effects\";\nimport Actions from \"./actions\";\nimport Api from \"./api.service\";\n\nfunction* getAll(action) {\n    const {payload: {url, config, storeName}} = action;\n    try {\n        const {data} = yield call(Api.getAll, url, config);\n        yield put({type: Actions.GET_ALL.SUCCESS, payload: {result: data, storeName}});\n    } catch (e) {\n        yield put({type: Actions.GET_ALL.FAILURE, payload: {storeName, errors: e.response.data}});\n    }\n}\n\n\nfunction* getAllTrigger(action) {\n    const {payload: {storeName}} = action;\n    yield put({type: Actions.GET_ALL.TRIGGER, payload: {storeName}});\n}\n\nfunction* getOne(action) {\n     const {payload: {url, config,  storeName}} = action;\n    try {\n        const {data} = yield call(Api.getOne, url, config);\n\n        yield put({type: Actions.GET_ONE.SUCCESS, payload: {result: data, storeName}});\n    } catch (e) {\n        yield put({type: Actions.GET_ONE.FAILURE, payload: {storeName,errors: e.response.data}});\n    }\n}\n\nfunction* getData(action) {\n    // const { url, storeName, config = {}, callback = () => {} } = action.payload;\n    // try {\n    //     const { data } = yield call(Api.getData, url, config);\n    //     yield put({\n    //         type: Actions.GET_DATA.SUCCESS,\n    //         payload: { result: data, storeName }\n    //     });\n    //     try {\n    //         yield call(callback, data);\n    //     } catch (e) {}\n    // } catch (e) {\n    //     yield put({\n    //         type: Actions.GET_DATA.FAILURE,\n    //         payload: { storeName, errors: e.response.data }\n    //     });\n    // }\n}\n\nfunction* getDataTrigger(action) {\n    // const {\n    //     payload: { storeName }\n    // } = action;\n    // yield put({ type: Actions.GET_DATA.TRIGGER, payload: { storeName } });\n}\n\nfunction* postAll(action) {\n    // const {payload: {url, config, scheme, storeName, entityName, callback}} = action;\n    //\n    // try {\n    //     const {data} = yield call(Api.postAll, url, config);\n    //     const normalizedData = yield call(Normalizer.Normalize, data, scheme);\n    //     yield put({\n    //         type: NormalizerAction.NORMALIZE.REQUEST,\n    //         payload: {...normalizedData, storeName, entityName}\n    //     });\n    //     try {\n    //         yield call(callback, data);\n    //     } catch (e) {\n    //\n    //     }\n    //     yield put({type: Actions.POST_ALL.SUCCESS, payload: normalizedData});\n    //\n    // } catch (e) {\n    //     yield put({type: Actions.POST_ALL.FAILURE, payload: {storeName,errors: e.response.data}});\n    //     yield put({type: NormalizerAction.NORMALIZE.FAILURE, payload: {storeName,errors: e.response.data}});\n    // }\n}\n\nfunction* pageSaga() {\n    yield all([\n        takeEvery(Actions.GET_ALL.REQUEST, getAll),\n        takeEvery(Actions.GET_ONE.REQUEST, getOne),\n        takeEvery(Actions.GET_ALL.TRIGGER, getAllTrigger),\n        takeEvery(Actions.GET_ONE.TRIGGER, getAllTrigger),\n        takeEvery(Actions.GET_DATA.REQUEST, getData),\n        takeEvery(Actions.GET_DATA.TRIGGER, getDataTrigger),\n        takeEvery(Actions.POST_ALL.REQUEST, postAll),\n    ]);\n}\n\nexport default pageSaga;\n","import { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\nimport pageSaga from \"./pages/saga\";\n\n\nexport default function* rootSaga(getState) {\n    yield all([\n        authSaga(),\n        pageSaga()\n    ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from './reducers';\nimport sagas from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(\n        reducers,\n        initialState,\n        composeEnhancers(\n            applyMiddleware(...middlewares)\n        ),\n    );\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import i18n from 'i18next';\nimport LanguageDetector  from \"i18next-browser-languagedetector\";\nimport translationsEn from './assets/locales/en/translation';\nimport translationsRu from './assets/locales/ru/translation';\nimport translationsUz from './assets/locales/uz/translation';\nimport { initReactI18next } from 'react-i18next';\n\nconst path = require('path');\ni18n\n    .use(initReactI18next)\n    .use(LanguageDetector)\n    .init({\n        // lng: ['en'],\n        fallbackLng: ['en'],\n        supportedLngs: [\n            'en', 'ru', 'uz'\n        ],\n        whitelist: [\n            'en', 'ru', 'uz',\n        ],\n        debug: false,\n        detection: {\n            order: ['cookie', 'querystring', 'htmlTag', 'localStorage', 'path', 'subdomain'],\n            caches: ['cookie'],\n        },\n        resources: {\n            en: {\n                translation: translationsEn,\n            },\n            uz: {\n                translation: translationsUz,\n            },\n            ru: {\n                translation: translationsRu,\n            }\n        },\n        ns: ['translation'],\n        defaultNS: ['translation'],\n        react: {\n            wait: true\n        },\n        saveMissing: true\n    });\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\nimport \"./i18n.js\";\n\n\n\nReactDOM.render(<Provider store={configureStore()}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}