{"version":3,"sources":["assets/images/logo-dark.png","redux/actions.js","components/Loader.js","pages/auth/Login.js"],"names":["module","exports","__webpack_require__","p","_auth_actions__WEBPACK_IMPORTED_MODULE_0__","d","__webpack_exports__","PreLoaderWidget","react_default","a","createElement","className","role","Component","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","handleValidSubmit","event","values","loginUser","username","password","history","renderRedirectToRoot","isUserAuthenticated","react_router","to","bind","assertThisInitialized","state","document","body","classList","add","remove","isAuthTokenValid","Fragment","loading","Loader","href","src","logo","alt","error","Alert","color","isOpen","get","lib","onValidSubmit","name","placeholder","value","required","type","id","FormGroup","Button","connect","_state$Auth","Auth","user"],"mappings":"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","file":"static/js/34.be63b5aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-dark.2262e042.png\";","export * from './auth/actions';","import React, { Component } from 'react';\n\n/**\n * Renders the preloader\n */\nclass PreLoaderWidget extends Component {\n\n    render() {\n        return (\n            <div className=\"preloader\">\n                <div className=\"status\">\n                    <div className=\"spinner-border avatar-sm text-primary m-2\" role=\"status\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PreLoaderWidget;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nimport {\n  FormGroup,\n  Button,\n  Alert,\n} from \"reactstrap\";\nimport {\n  AvForm,\n  AvField,\n  AvGroup,\n  AvInput,\n  AvFeedback,\n} from \"availity-reactstrap-validation\";\n\nimport { loginUser } from \"../../redux/actions\";\nimport { isUserAuthenticated } from \"../../helpers/authUtils\";\nimport Loader from \"../../components/Loader\";\nimport logo from \"../../assets/images/logo-dark.png\";\nimport \"../../assets/scss/login/login.css\";\nimport {get} from \"lodash\";\n\nclass Login extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.handleValidSubmit = this.handleValidSubmit.bind(this);\n    this.state = {\n      username: \"test\",\n      password: \"test\",\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    document.body.classList.add(\"authentication-bg\");\n    document.body.classList.add(\"authentication-bg-pattern\");\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n\n    document.body.classList.remove(\"authentication-bg\");\n    document.body.classList.remove(\"authentication-bg-pattern\");\n  }\n\n  /**\n   * Handles the submit\n   */\n  handleValidSubmit = (event, values) => {\n    this.props.loginUser(values.username, values.password, this.props.history);\n  };\n\n  /**\n   * Redirect to root\n   */\n  renderRedirectToRoot = () => {\n    const isAuthTokenValid = isUserAuthenticated();\n    if (isAuthTokenValid) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  render() {\n    const isAuthTokenValid = isUserAuthenticated();\n    return (\n      <React.Fragment>\n        {this.renderRedirectToRoot()}\n\n        {(this._isMounted || !isAuthTokenValid) && (\n          <div className=\"form-bg\">\n            <div className=\"form-border\">\n              {/* preloader */}\n              {this.props.loading && <Loader />}\n\n              <div className=\"text-center w-75 m-auto\">\n                <a href=\"/\">\n                  <span>\n                    <img src={logo} alt=\"\" />\n                  </span>\n                </a>\n                <h1 className=\"mt-3\">Sign In!</h1>\n              </div>\n\n              {this.props.error && (\n                <Alert color=\"danger\" isOpen={this.props.error ? true : false}>\n                  <div>{get(this.props, 'error.response.data.message', '')}</div>\n                </Alert>\n              )}\n\n              <AvForm onValidSubmit={this.handleValidSubmit}>\n                <AvField\n                  name=\"username\"\n                  placeholder=\"username\"\n                  className=\"input-form\"\n                  value={this.state.username}\n                  required\n                />\n\n                <AvGroup className=\"mb-3\">\n                  <AvInput\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    className=\"input-form\"\n                    placeholder=\"password\"\n                    value={this.state.password}\n                    required\n                  />\n                  <AvFeedback>This field is invalid</AvFeedback>\n                </AvGroup>\n\n                <FormGroup>\n                  <Button className=\"btn-block\">Kirish</Button>\n                </FormGroup>\n              </AvForm>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { user, loading, error } = state.Auth;\n  return { user, loading, error };\n};\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n"],"sourceRoot":""}