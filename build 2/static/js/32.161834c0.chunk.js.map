{"version":3,"sources":["assets/images/line.svg","assets/images/line2.svg","assets/images/line3.svg","assets/images/line4.svg","assets/images/line5.svg","chart/BarChart.js","chart/PieChart.js","pages/dashboards/Dashbord.js"],"names":["module","exports","__webpack_require__","p","BarChart","data","labels","get","this","props","datasets","react_default","a","createElement","Fragment","react_chartjs_2_es","options","legend","display","position","plugins","title","text","responsive","scales","xAxes","yAxes","height","Component","connect","PieChart","console","log","label","backgroundColor","RangePicker","DatePicker","withTranslation","state","items","item","isFetched","isFetchedItem","total","user","dispatch","getData","_ref6","_ref6$startDate","startDate","_ref6$endDate","endDate","type","ApiActions","GET_ONE","REQUEST","payload","url","config","params","between","concat","storeName","withRouter","_ref","history","Object","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","setLabels","_useState3","_useState4","statusData","setStatusData","_useState5","_useState6","setDatasets","_useState7","Date","setMonth","getMonth","_useState8","filter","setFilter","t","i18n","useEffect","moment","format","status","forEach","element","certificate","allInMont","allInMontLabels","map","_ref2","year","month","certificateLabels","_ref3","allInMontData","_ref4","certificateData","_ref5","allInMontDataset","certificateDataset","val","push","barThickness","className","Row","Col","hasAccess","lg","Card","CardBody","applications","src","line","alt","line2","line3","line4","line5","space","direction","size","onChange","dates","dateStrings","toDate","defaultValue","dayjs","chart_BarChart","chart_PieChart"],"mappings":"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","file":"static/js/32.161834c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/line.34357a61.svg\";","module.exports = __webpack_public_path__ + \"static/media/line2.ec899ff9.svg\";","module.exports = __webpack_public_path__ + \"static/media/line3.369c8b39.svg\";","module.exports = __webpack_public_path__ + \"static/media/line4.94741727.svg\";","module.exports = __webpack_public_path__ + \"static/media/line5.cfc45415.svg\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { get } from 'lodash';\r\n\r\nclass BarChart extends Component {\r\n  render() {\r\n    const options = {\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n      },\r\n      plugins: {\r\n        title: {\r\n          display: true,\r\n          text: \"Chart.js Bar Chart - Stacked\",\r\n        },\r\n      },\r\n      responsive: true,\r\n      scales: {\r\n        xAxes: [],\r\n        yAxes: [],\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      labels: get(this.props, 'labels', []),\r\n      datasets: get(this.props, 'datasets', []),\r\n      // datasets: [\r\n      //   {\r\n      //     label: \"Barcha arizalar\",\r\n      //     data: [12, 23, 45, 76, 34, 56],\r\n      //     backgroundColor: \"#165BAA\",\r\n      //   },\r\n      //   {\r\n      //     label: \"Sertifikati mavjud arizalar\",\r\n      //     data: [43, 45, 64, 12, 33],\r\n      //     backgroundColor: \"#A155B9\",\r\n      //   },\r\n      // ],\r\n    };\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <Bar options={options} data={data} height={120} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(BarChart);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { get } from \"lodash\";\r\n\r\nclass PieChart extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n    const options = {\r\n      legend: {\r\n        display: true,\r\n        position: \"right\",\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      labels: [\r\n        `Inkor qilingan`,\r\n        `Yangi arizalar`,\r\n        \"Ko'rilayotgan arizalar\",\r\n        `Reestrga kiritilgan`,\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"# of Votes\",\r\n          data: get(this.props, \"data\"),\r\n          backgroundColor: [\r\n            \"rgba(247, 101, 163, 1)\",\r\n            \"rgba(161, 85, 185, 1)\",\r\n            \"rgba(22, 191, 214, 1)\",\r\n            \"#0745b0\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        <Pie data={data} options={options} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(PieChart);\r\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Card, CardBody, Input } from \"reactstrap\";\nimport { get } from \"lodash\";\nimport moment from \"moment\";\nimport ApiActions from \"../../redux/pages/actions\";\nimport line from \"../../assets/images/line.svg\";\nimport line2 from \"../../assets/images/line2.svg\";\nimport line3 from \"../../assets/images/line3.svg\";\nimport line4 from \"../../assets/images/line4.svg\";\nimport line5 from \"../../assets/images/line5.svg\";\nimport \"../../assets/scss/dashboard/index.css\";\nimport BarChart from \"../../chart/BarChart\";\nimport PieChart from \"../../chart/PieChart\";\n// import HorizonBarChart from \"../../chart/HorizonBarChart\";\n// import TopSubChart from \"../../chart/TopSubChart\";\n// import TopMAI from \"../../chart/TopMAI\";\nimport { DatePicker, Space } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { withTranslation } from \"react-i18next\";\nimport { hasAccess } from \"../../helpers/authUtils\";\nconst dateFormat = \"DD/MM/YYYY\";\n\nconst { RangePicker } = DatePicker;\n\nconst DefaultDashboard = ({\n  history,\n  getData,\n  item,\n  isFetched,\n  total,\n  user,\n  ...props\n}) => {\n  //bar-chart-data\n  const [labels, setLabels] = useState([]);\n  const [statusData, setStatusData] = useState([]);\n  const [datasets, setDatasets] = useState([]);\n\n  // date-range\n  const [filter, setFilter] = useState({\n    startDate: new Date(new Date().setMonth(new Date().getMonth() - 3)),\n    endDate: new Date(),\n  });\n\n  const { t, i18n } = props;\n\n  const onRangeChange = (dates, dateStrings) => {\n    if (dates) {\n      setFilter({\n        startDate: moment(dateStrings[0], \"DD/MM/yyyy\").toDate(),\n        endDate: moment(dateStrings[1], \"DD/MM/yyyy\").toDate(),\n      });\n      console.log(dateStrings[0], dateStrings[1]);\n    } else {\n      console.log(\"Clear\");\n    }\n  };\n\n  useEffect(() => {\n    getData({\n      startDate: moment(get(filter, \"startDate\")).format(\"DD-MM-yyyy\"),\n      endDate: moment(get(filter, \"endDate\")).format(\"DD-MM-yyyy\"),\n    });\n  }, [filter]);\n\n  useEffect(() => {\n    let status = [];\n    get(item, \"status\", []).forEach((element) => {\n      status[get(element, \"status\")] = get(element, \"total\");\n    });\n\n    setStatusData(status);\n\n    const certificate = get(item, \"certificate\", []);\n    const allInMont = get(item, \"allInMont\", []);\n\n    const allInMontLabels = allInMont.map(\n      ({ year, month }) => `${month} ${year}`\n    );\n    const certificateLabels = certificate.map(\n      ({ year, month }) => `${month} ${year}`\n    );\n    const label =\n      get(allInMontLabels, \"length\", 0) > get(certificateLabels, \"length\", 0)\n        ? allInMontLabels\n        : certificateLabels;\n    setLabels(label);\n\n    let allInMontData = {};\n    allInMont.forEach(({ year, month, total }) => {\n      allInMontData[`${month} ${year}`] = total;\n    });\n\n    let certificateData = {};\n    certificate.forEach(({ year, month, total }) => {\n      certificateData[`${month} ${year}`] = total;\n    });\n\n    const allInMontDataset = [];\n    const certificateDataset = [];\n    label.forEach((val) => {\n      allInMontDataset.push(allInMontData[val] | 0);\n      certificateDataset.push(certificateData[val] | 0);\n    });\n\n    setDatasets([\n      {\n        label: \"Sertifikati mavjud arizalar\",\n        backgroundColor: \"#A155B9\",\n        data: certificateDataset,\n        barThickness: 50,\n      },\n      {\n        label: \"Barcha arizalar\",\n        backgroundColor: \"#165BAA\",\n        data: allInMontDataset,\n        barThickness: 50,\n      },\n    ]);\n  }, [item]);\n\n  return (\n    <React.Fragment>\n      <div className=\"\">\n        <Row>\n          <Col>\n            <div className=\"page-title-box\">\n              {hasAccess([\"admin\", \"manager\"], get(user, \"roles\", [])) && (\n                <Row>\n                  <Col lg={7}>\n                    {/* <h4 className=\"page-title\">{user.name}</h4> */}\n                  </Col>\n                  <Col lg={5} className=\"mt-lg-3 mt-md-0\"></Col>\n                </Row>\n              )}\n            </div>\n          </Col>\n        </Row>\n\n        <Row className=\"handl-row\">\n          <Col className=\"statistics\">\n            <Card className=\"card-statistics\">\n              <CardBody className=\"card-body-tab\">\n                <div className=\"icon-div1\">\n                  <i className=\"fa fa-users fa-2x text-info\"></i>\n                </div>\n                <h4>{t(\"applications\")}</h4>\n                <p>{t(\"all_applications\")}</p>\n                <i className=\"fa fa-arrow-up text-dark mr-1\"></i>\n                <span>{item.applications}</span>\n                <img src={line} alt=\"\" />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col className=\"statistics\">\n            <Card className=\"card-statistics\">\n              <CardBody className=\"card-body-tab\">\n                <div className=\"icon-div2\">\n                  <i className=\"fa fa-users fa-2x text-primary\"></i>\n                </div>\n                <h4>{t(\"inproccess\")}</h4>\n                <p>{t(\"viewing_applications\")}</p>\n                <i className=\"fa fa-arrow-up text-dark mr-1\"></i>\n                <span>{statusData[2]}</span>\n                <img src={line2} alt=\"\" />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col className=\"statistics\">\n            <Card className=\"card-statistics\">\n              <CardBody className=\"card-body-tab\">\n                <div className=\"icon-div3\">\n                  <i className=\"fa fa-user-plus fa-2x text-success\"></i>\n                </div>\n                <h4>{t(\"accepted_applications\")}</h4>\n                <p>{t(\"accepted_applications\")}</p>\n                <i className=\"fa fa-arrow-up text-dark mr-1\"></i>\n                <span>{statusData[5]}</span>\n                <img src={line3} alt=\"\" />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col className=\"statistics\">\n            <Card className=\"card-statistics\">\n              <CardBody className=\"card-body-tab\">\n                <div className=\"icon-div4\">\n                  <i className=\"fa fa-users fa-2x text-warning\"></i>\n                </div>\n\n                {hasAccess([\"admin\", \"manager\"], get(user, \"roles\", [])) && (\n                  <h4>{t(\"unview\")}</h4>\n                )}\n                <p>{t(\"unview_applications\")}</p>\n                <i className=\"fa fa-arrow-down text-dark mr-1\"></i>\n                <span>{statusData[1]}</span>\n                <img src={line4} alt=\"\" />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col className=\"statistics\">\n            <Card className=\"card-statistics\">\n              <CardBody className=\"card-body-tab\">\n                <div className=\"icon-div5\">\n                  <i className=\"fa fa-user-times fa-2x text-danger\"></i>\n                </div>\n                <h4>{t(\"rejected_applications\")}</h4>\n                <p>{t(\"rejected_app\")}</p>\n                <i className=\"fa fa-arrow-up text-dark mr-1\"></i>\n                <span>{statusData[0]}</span>\n                <img src={line5} alt=\"\" />\n              </CardBody>\n            </Card>\n          </Col>\n          </Row>\n\n          <Row>\n          <Col lg={8}>\n            <Card className=\"chart-area\">\n              <div className=\"p-3\">\n                <Row className=\"d-flex justify-content-between\">\n                  <Col lg={6}>\n                    <h4 className=\"text-muted\">{t(\"all_applications\")}</h4>\n                  </Col>\n                  <Col lg={2}>\n                    {/* <Input id=\"timeSelect\" type=\"select\" className=\"p-1\">\n                      <option value=\"\">oy</option>\n                      <option value=\"\">3 oy</option>\n                      <option value=\"\">6 oy</option>\n                      <option value=\"\">1 yil</option>\n                    </Input> */}\n                  </Col>\n                  <Col lg={4}>\n                    <Space direction=\"vertical\" size={12}>\n                      <RangePicker\n                        onChange={onRangeChange}\n                        defaultValue={[\n                          dayjs(\n                            moment(get(filter, \"startDate\")).format(\n                              \"DD-MM-yyyy\"\n                            ),\n                            dateFormat\n                          ),\n                          dayjs(\n                            moment(get(filter, \"endDate\")).format(\"DD-MM-yyyy\"),\n                            dateFormat\n                          ),\n                        ]}\n                        format={dateFormat}\n                      />\n                    </Space>\n                  </Col>\n                </Row>\n                <BarChart labels={labels} datasets={datasets} />\n              </div>\n            </Card>\n          </Col>\n\n          <Col lg={4}>\n            <Card className=\"chart-area\">\n              <CardBody>\n                <h2>{item.applications}</h2>\n                <h5>{t(\"received_applications\")}</h5>\n                <hr />\n                <PieChart data={statusData} />\n              </CardBody>\n            </Card>\n          </Col>\n\n          {/* <Col lg={4}>\n            <Card className=\"horizontal-charts\">\n              <CardBody>\n                <h4>Sertifikat va litsenziyalar bo'yicha</h4>\n                <HorizonBarChart />\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col lg={4}>\n            <Card className=\"horizontal-charts\">\n              <CardBody>\n                <h4>Top Subyektlar</h4>\n                <TopSubChart />\n              </CardBody>\n            </Card>\n          </Col> */}\n\n          {/* <Col lg={4}>\n            <Card className=\"horizontal-charts\">\n              <CardBody>\n                <h4>TopMAI</h4>\n                <TopMAI />\n              </CardBody>\n            </Card>\n          </Col> */}\n        </Row>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    items: get(state, \"PageReducer.data.item-list.result.data\", []),\n    item: get(state, \"PageReducer.data.get-dashboard-item.result\", {}),\n    isFetched: get(state, \"PageReducer.data.item-list.isFetched\", false),\n    isFetchedItem: get(\n      state,\n      \"PageReducer.data.get-dashboard-item.isFetched\",\n      false\n    ),\n    total: get(state, \"PageReducer.data.item-list.result.total\", 0),\n    user: get(state, \"Auth.user\", {}),\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getData: ({ startDate = \"\", endDate = \"\" }) => {\n      const storeName = \"get-dashboard-item\";\n      dispatch({\n        type: ApiActions.GET_ONE.REQUEST,\n        payload: {\n          url: `/api/dash`,\n          config: {\n            params: {\n              between: `${startDate},${endDate}`,\n            },\n          },\n          storeName,\n        },\n      });\n    },\n  };\n};\n\nexport default withTranslation(\"translation\")(\n  connect(mapStateToProps, mapDispatchToProps)(withRouter(DefaultDashboard))\n);\n"],"sourceRoot":""}